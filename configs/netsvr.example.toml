# 日志级别 debug、info、warn、error
LogLevel = "debug"
# 日志文件，如果不配置，则输出到控制台，如果配置的是相对地址（不包含盘符或不是斜杠开头），则会自动拼接上进程工作目录的地址，最好配置绝对路径
LogFile = "log/netSvr.log"
# 网关收到停止信号后的等待时间，0表示永久等待，否则是超过这个时间还没优雅停止，则会强制退出
ShutdownWaitTime = "5s"
# pprof服务器监听的地址，ip:port，这个地址必须是内网地址，外网不允许访问，如果是空字符串，则不会开启，生产环境服务没毛病就别开它
PprofListenAddress = "127.0.0.1:6062"
# 限流器，如果配置是0，则表示不启用限流器
[Limit]
# 网关允许每秒打开多少个连接，配置为0，则不做任何限制
OnOpen = 10000
# 网关允许每秒收到多少个消息，配置为0，则不做任何限制
OnMessage = 50000
# 客户端的websocket服务器配置
[Customer]
# 监听的地址，ip:port，这个地址一般是外网地址
ListenAddress = "127.0.0.1:6060"
# url路由
HandlePattern = "/netsvr"
# 允许连接的origin，空表示不限制，否则会循环列表进行包含匹配
AllowOrigin = []
# websocket服务器读取客户端连接的超时时间，该时间段内，客户端连接没有发消息过来，则会超时，连接会被关闭，所以客户端连接必须在该时间间隔内发送心跳字符串
ReadDeadline = "120s"
# websocket服务器写入客户端连接的超时时间，该时间段内，没发送成功连接会被关闭
SendDeadline = "1s"
# 最大连接数，超过的会被拒绝
MaxOnlineNum = 100000
# io模式，0：IOModNonBlocking，1：IOModBlocking，2：IOModMixed，详细见：https://github.com/lesismal/nbio
IOMod = 0
# 最大阻塞连接数，IOMod是2时有效，详细见：https://github.com/lesismal/nbio
MaxBlockingOnline = 10000
# 客户发送数据的大小限制（单位：字节）
ReceivePackLimit = 2097152
# 往websocket连接写入时的消息类型，1：TextMessage，2：BinaryMessage
SendMessageType = 1
# 回调脚本文件，如果需要，最好配置绝对路径，不需要，请配置为空字符串
CallbackScriptFile = "configs/callback.go"
# tls配置
TLSCert = ""
TLSKey = ""
# 心跳字符串，客户端连接必须定时发送该字符串，用于维持心跳
HeartbeatMessage = "~6YOt5rW35piO~"
# 压缩级别，区间是：[-2,9]，0表示不压缩，具体见https://golang.org/pkg/compress/flate/
CompressionLevel = 1

#业务进程的tcp服务器配置
[Worker]
# 监听的地址，ipv4:port，这个地址必须是内网ipv4地址，外网不允许访问，如果配置的是域名:端口，则会尝试获取域名对应的内网ipv4地址，并打印告警日志
ListenAddress = "127.0.0.1:6061"
# worker读取business连接的超时时间，该时间段内，business连接没有发消息过来，则会超时，连接会被关闭
ReadDeadline = "120s"
# worker发送给business连接的超时时间，该时间段内，没发送成功且有部分写入，则business连接会被关闭
SendDeadline = "10s"
# business发送数据的大小限制（单位：字节），business发送了超过该限制的包，则连接会被关闭
ReceivePackLimit = 2097152
# 读取business发送数据的缓冲区大小（单位：字节）
ReadBufferSize = 4096
# worker发送给business的缓通道大小
SendChanCap = 1024
# worker发送给business的缓通道写入超时，默认是100毫秒，超过该时间还没写入，则丢弃消息并统计worker到business的失败次数
SendChanDeadline = "100ms"
# 心跳字符串，客户端连接必须定时发送该字符串，用于维持心跳
HeartbeatMessage = "~6YOt5rW35piO~"

# 统计服务
[Metrics]
# 统计服务的各种状态，空，则不统计任何状态
# 1：统计客户连接的打开次数
# 2：统计客户连接的关闭次数
# 3：统计客户连接的心跳次数
# 4：统计客户数据转发到worker的次数
# 5：统计客户数据转发到worker的字节数
# 6：统计往客户写入数据成功次数
# 7：统计往客户写入数据成功字节数
# 8：统计连接打开的限流次数
# 9：统计客户消息限流次数
# 10：统计worker到business的失败次数
# 11：统计往客户写入数据失败次数
# 12：统计往客户写入数据失败字节数
Item = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
