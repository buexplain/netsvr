syntax = "proto3";

package netsvr.netSvrStatusResp;

import "reCtx.proto";

option go_package = "internal/protocol;protocol";

//worker响应网关的状态到business
message NetSvrStatusResp {
  //req（request）、resp（response）时候的上下文，worker会原样回传给business
  netsvr.reCtx.ReCtx reCtx = 1;
  //网关中的当前客户连接数
  int32 customerConnCount = 2;
  //当前等待转发到客户的数据量
  CatapultResp catapult = 3;
  //统计网关的各种速率值
  map<string, MetricsStatusResp> metrics = 4;
}

message CatapultResp {
  //当前等待发送给客户数据的缓冲区的大小
  int32 chanCap = 6;
  //当前等待转发到客户的数据量
  int32 chanLen = 4;
  //当前客户于发送数据给客户的协程数量
  int32 consumer = 5;
}

message MetricsStatusResp {
  //总数
  int64 count = 1;
  //每秒速率
  float meanRate = 2;
  //每秒速率的最大值
  float meanRateMax = 3;
  //每1分钟速率
  float rate1 = 4;
  //每1分钟速率的最大值
  float  rate1Max = 5;
  //每5分钟速率
  float rate5 = 6;
  //每5分钟速率的最大值
  float  rate5Max = 7;
  //每15分钟速率
  float rate15 = 8;
  //每15分钟速率的最大值
  float  rate15Max = 9;
}