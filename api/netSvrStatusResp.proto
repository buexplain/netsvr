syntax = "proto3";

package netsvr.netSvrStatusResp;

import "reCtx.proto";

option go_package = "internal/protocol;protocol";

//worker响应网关的状态到business
message NetSvrStatusResp {
  //req（request）、resp（response）时候的上下文，worker会原样回传给business
  netsvr.reCtx.ReCtx reCtx = 1;
  //网关中的客户连接数
  int32 customerConnCount = 2;
  //网关中的主题数量
  int32 topicCount = 3;
  //等待转发到客户的数据量
  int32 catapultWaitSendCount = 4;
  //客户于发送数据给客户的协程数量
  int32 catapultConsumer = 5;
  //等待发送给客户数据的缓冲区的大小
  int32 catapultChanCap = 6;
  //统计客户连接的打开情况
  map<string, int64> metricsCustomerConnOpen = 7;
  //统计客户连接的关闭情况
  map<string, int64> metricsCustomerConnClose = 8;
  //统计客户连接的心跳情况
  map<string, int64> metricsCustomerHeartbeat = 9;
  //统计客户数据转发到worker的情况
  map<string, int64> metricsCustomerTransfer = 10;
}